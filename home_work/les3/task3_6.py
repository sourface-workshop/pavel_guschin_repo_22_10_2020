"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв
и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

Продолжить работу над заданием.
В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().
"""

"""
Я так понимаю, методами title и capitalize пользоваться низзя, да? )))

Кароч, смысл такой:
Я решил не использовать приведение к списку, т.к. думаю, что это
будет затратнее, бо создается куча объектов. Если ошибаюсь - сделаю через список.
Поэтому реализовал через итерацию по строке с заменами, 
т.к. там мы перезаписываем строку немного раз.
Фукнция реализована так, что игнорирует небуквенные символы
и возвращает строку с сохранением всех символов.
Для поднятия регистра использовал метод upper. Если это тоже низзя, то могу
переделать, создав кортежи с алфавитами в обоих регистрах, и заменяя по ним,
но, по-моему, это глупость.

Не совсем понял - функция должна принимать ТОЛЬКО латинские буквы?
Я сделал для любых...
"""


def uppercase(string: str, each=False) -> str:
    for i in range(len(string)):    # Срезы используем, чтобы не было обращений вне индекса
        if string[i].isalpha() and not string[i - 1:i].isalpha():      # Если символ - буква, а предыдущий - не буква,
            string = string[:i] + string[i].upper() + string[i + 1:]   # переделываем строку из среза-БУКВЫ-среза
            if not each: break
    return string


print(uppercase('-qwerty йцукен-', each=True))
