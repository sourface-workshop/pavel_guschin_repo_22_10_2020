"""
2. Для списка реализовать обмен значений соседних элементов,
т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().
"""

#   Решил ради разнообразия сделать заполнение не циклом, а сплитом
some_list = input('Введите несколько символов через запятую и пробел: ').split(', ')

# Ничего лучше попарного перебора не придумал. Алгоритм одинаковый, операции разные
# Если есть возможность решить генератором - расскажите, буду благодарен!

# __________ ВАРИАНТ 1 __________
for i in range(0, len(some_list) - 1, 2):   # Цикл завяжем на длину списка с шагом 2. Т.е. при нечетном количестве
    some_list[i], some_list[i + 1] = some_list[i + 1], some_list[i]         # последний элемент не попадет в цикл

# __________ ВАРИАНТ 2 __________
for i in range(0, len(some_list) - 1, 2):   # Тот же принцип, только не распаковкой кортежа, а вставкой вырезанного
    some_list.insert(i, some_list.pop(i + 1))                                               # соседнего элемента

# Какой из этих вариантов жрет меньше ресурсов?

print(some_list)
